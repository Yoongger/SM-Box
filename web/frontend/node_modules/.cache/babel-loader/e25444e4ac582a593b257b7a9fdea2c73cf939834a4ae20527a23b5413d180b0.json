{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursor\\\\SM-Box\\\\web\\\\frontend\\\\src\\\\components\\\\ProxySwitcher.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getConfig, updateConfig } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst proxyModes = [{\n  value: 'direct',\n  label: '直连模式'\n}, {\n  value: 'proxy',\n  label: '全局代理'\n}, {\n  value: 'auto',\n  label: '智能分流'\n}, {\n  value: 'rule',\n  label: '规则代理'\n}];\nconst ProxySwitcher = () => {\n  _s();\n  var _proxyModes$find;\n  const [mode, setMode] = useState('auto');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const loadMode = async () => {\n      const res = await getConfig();\n      setMode(res.data.proxyMode);\n    };\n    loadMode();\n  }, []);\n  const handleSwitch = async newMode => {\n    setLoading(true);\n    try {\n      await updateConfig({\n        proxyMode: newMode\n      });\n      setMode(newMode);\n    } catch (error) {\n      console.error('切换失败:', error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"proxy-switcher\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u4EE3\\u7406\\u6A21\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-buttons\",\n      children: proxyModes.map(({\n        value,\n        label\n      }) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: mode === value ? 'active' : '',\n        onClick: () => handleSwitch(value),\n        disabled: loading,\n        children: label\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-description\",\n      children: (_proxyModes$find = proxyModes.find(m => m.value === mode)) === null || _proxyModes$find === void 0 ? void 0 : _proxyModes$find.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ProxySwitcher, \"ZPmkjchDokR1i1HO2tvMX8jISSg=\");\n_c = ProxySwitcher;\nexport default ProxySwitcher;\nvar _c;\n$RefreshReg$(_c, \"ProxySwitcher\");","map":{"version":3,"names":["React","useState","useEffect","getConfig","updateConfig","jsxDEV","_jsxDEV","proxyModes","value","label","ProxySwitcher","_s","_proxyModes$find","mode","setMode","loading","setLoading","loadMode","res","data","proxyMode","handleSwitch","newMode","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","disabled","find","m","description","_c","$RefreshReg$"],"sources":["D:/Cursor/SM-Box/web/frontend/src/components/ProxySwitcher.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getConfig, updateConfig } from '../services/api';\n\nconst proxyModes = [\n  { value: 'direct', label: '直连模式' },\n  { value: 'proxy', label: '全局代理' },\n  { value: 'auto', label: '智能分流' },\n  { value: 'rule', label: '规则代理' }\n];\n\nconst ProxySwitcher = () => {\n  const [mode, setMode] = useState('auto');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const loadMode = async () => {\n      const res = await getConfig();\n      setMode(res.data.proxyMode);\n    };\n    loadMode();\n  }, []);\n\n  const handleSwitch = async (newMode) => {\n    setLoading(true);\n    try {\n      await updateConfig({ proxyMode: newMode });\n      setMode(newMode);\n    } catch (error) {\n      console.error('切换失败:', error);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"proxy-switcher\">\n      <h3>代理模式</h3>\n      <div className=\"mode-buttons\">\n        {proxyModes.map(({ value, label }) => (\n          <button\n            key={value}\n            className={mode === value ? 'active' : ''}\n            onClick={() => handleSwitch(value)}\n            disabled={loading}\n          >\n            {label}\n          </button>\n        ))}\n      </div>\n      <div className=\"mode-description\">\n        {proxyModes.find(m => m.value === mode)?.description}\n      </div>\n    </div>\n  );\n};\n\nexport default ProxySwitcher;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}